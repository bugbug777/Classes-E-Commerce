.container {
  max-width: 1140px;
  margin: 0 auto;
  padding: 0 15px;
  @include pad {
    max-width: 720px;
  }
  @include mobile {
    max-width: 360px;
    padding: 0 7.5px;
  }
}
.row {
  // 內縮的 margin 是為了讓 row 貼合容器
  // 因為我們的容器預設已經有 padding
  // 如果再加上內層 column 的 margin 這樣會造成 double 的推擠
  // 因此透過負數的 margin 將最靠近外圍的 column 單邊 margin 予以消除
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter/2;
  margin-left: -$gutter/2;
  @include pad {
    margin-right: -$gutter-md/2;
    margin-left: -$gutter-md/2;
  }
  @include mobile {
    margin-right: -$gutter-sm/2;
    margin-left: -$gutter-sm/2;
  }
}
.col {
  @for $i from 1 through 12 {
    &-#{$i} {
      width: calc(#{$col-width} * #{$i} + #{$gutter} * #{$i - 1});
      margin: 0 $gutter/2 0;
    }
  }
  @include pad {
    @for $i from 1 through 12 {
      &-md-#{$i} {
        width: calc(#{$col-width-md} * #{$i} + #{$gutter-md} * #{$i - 1});
        margin: 0 $gutter-md/2 0;
      }
    }
  }
  @include mobile {
    @for $i from 1 through 4 {
      &-sm-#{$i} {
        width: calc(#{$col-width-sm} * #{$i} + #{$gutter-sm} * #{$i - 1});
        margin: 0 $gutter-sm/2 0;
      }
    }
  }
}
.offset {
  @for $i from 0 through 12 {
    &-#{$i}::before {
      display: block;
      content: '';
      width: calc(#{$col-width} * #{$i} + #{$gutter} * #{$i - 1});
      margin: 0 $gutter/2 $gutter;
    }
  }
  @include pad {
    @for $i from 0 through 12 {
      &-md-#{$i}::before {
        display: block;
        content: '';
        width: calc(#{$col-width-md} * #{$i} + #{$gutter-md} * #{$i - 1});
        margin: 0 $gutter-md/2 0;
      }
    }
  }
  @include mobile {
    @for $i from 0 through 4 {
      &-sm-#{$i}::before {
        display: block;
        content: '';
        width: calc(#{$col-width-sm} * #{$i} + #{$gutter-sm} * #{$i - 1});
        margin: 0 $gutter-sm/2 0;
      }
    }
  }
}